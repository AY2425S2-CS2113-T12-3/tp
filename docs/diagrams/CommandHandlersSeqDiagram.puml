@startuml
actor User
participant "CommandLoopHandler" as CLH
participant CommandFactory as Factory order 10
participant DataManager as DM order 20
loop inputCommand != bye
    User -> CLH ++: inputCommand = "any String"
    create "CommandParser" as Parser1
    CLH -> Parser1 ++ : new CommandParser(input)
    Parser1 -> Parser1 : getParts()
    Parser1 --> CLH -- : return parts
    destroy Parser1
    alt parts != valid command
        CLH --> User -- : "Invalid Command"
        User -> CLH ++: inputCommand = "any String"
        create "CommandParser" as Parser2
        CLH -> Parser2 ++ : new CommandParser(input)
        Parser2 -> Parser2 : getParts()
        Parser2 --> CLH -- : return parts
    else parts == valid command
        create CommandHandler as Handler
        CLH ->Handler ++ :new CommandHandler(List, parts)

        Handler -> Factory ++ : createCommand(parts)
        Factory --> Handler -- : return Command

        Handler --> CLH

        CLH -> Handler  : runCommand()
        Handler --> CLH --
        destroy Handler
    end
    CLH -> DM ++ : saveTutorials(tutorialList)
    DM --> CLH --
    CLH -> DM ++ : saveAttendanceFile(attendanceFile)
    DM --> CLH --
    CLH -> DM ++ : saveMarksList(tutorialList)
    DM --> CLH --
    CLH --> User
end
@enduml