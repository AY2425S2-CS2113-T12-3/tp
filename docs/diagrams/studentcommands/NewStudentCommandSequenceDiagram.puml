@startuml

participant "NewStudentCommand" as NSC
participant "StudentCommandHelper" as Helper
participant "DateTimeFormatterUtil" as DateUtil
participant "tutorialClassList: TutorialClassList" as TCL
participant "TutorialClass" as TC
participant "StudentList" as SL
participant "Student" as S

-> NSC: execute(parts, tutorialClassList)
activate NSC

NSC -> Helper: parseInput(input, 6)
activate Helper
Helper --> NSC: String[] inputParts
deactivate Helper

NSC -> TCL: getTutorialByName(tutorialClassCode)
activate TCL
TCL --> NSC: TutorialClass
deactivate TCL


NSC -> SL: check if student already exists
activate SL
SL --> NSC: student does not exist
deactivate SL

alt student does not exist
    create S
    NSC -> S: new Student(...)
    activate S
    S --> NSC: student
    deactivate S

    NSC -> TC: getStudentList()
    activate TC
    TC -> SL: addStudent(student)
    deactivate TC
    activate SL
    SL --> NSC:
    deactivate SL


end

deactivate NSC
@enduml
