@startuml
actor User
participant "ListMarksCommand" as ListMarksCommand
participant "TutorialClassList" as TutorialClassList
participant "TutorialClass" as TutorialClass
participant "StudentList" as StudentList
participant "Student" as Student
participant "MarksList" as MarksList
participant "Marks" as Marks

skinparam sequenceReferenceBackgroundColor #f7807c

User -> ListMarksCommand : execute(parts, TutorialClassList)
activate ListMarksCommand

ListMarksCommand -> TutorialClassList : getTutorialByName(tutorialID)
activate TutorialClassList
ref over TutorialClassList, TutorialClass : Find tutorial by name
TutorialClassList --> ListMarksCommand : TutorialClass
deactivate TutorialClassList

ListMarksCommand -> TutorialClass : getStartTime()
activate TutorialClass
TutorialClass --> ListMarksCommand : null / startTime
deactivate TutorialClass

ListMarksCommand -> TutorialClass : getStudentList()
activate TutorialClass
TutorialClass --> ListMarksCommand : StudentList
deactivate TutorialClass

ListMarksCommand -> StudentList : getStudentByMatricNumber(matricNumber)
activate StudentList
ref over StudentList, Student : Find student by matric
StudentList --> ListMarksCommand : null / Student
deactivate StudentList

ListMarksCommand -> Student : getMatricNumber()
activate Student
Student --> ListMarksCommand : matricNumber
deactivate Student

ListMarksCommand -> Student : getMarksList()
activate Student
Student --> ListMarksCommand : MarksList
deactivate Student

ListMarksCommand -> MarksList : printMarks()
activate MarksList

alt MarksList is empty
    MarksList -> User : print "No marks added yet."
else MarksList is not empty
    loop all marks in list
        MarksList -> Marks : toString()
        activate Marks
        Marks --> MarksList : string representation
        deactivate Marks
        MarksList --> User : print marks string
        MarksList -> Marks : marks.getMarks()
        activate Marks
        Marks --> MarksList
        deactivate Marks
        MarksList -> Marks : marks.getMaxMark()
        activate Marks
        Marks --> MarksList
        deactivate Marks
        MarksList -> User : print "Average: avgPercent%"
    end
end

MarksList --> ListMarksCommand : return
deactivate MarksList

ListMarksCommand --> User : return
deactivate ListMarksCommand
@enduml
